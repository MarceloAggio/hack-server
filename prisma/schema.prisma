generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              String            @id @default(uuid())
  email           String            @unique
  password        String
  cpf             String
  status          String
  name            String
  fixedIncome     Float
  phoneNumber     String?
  registeredAt    DateTime          @default(now())
  
  financialProfiles FinancialProfile[]
  actionPlans       ActionPlan[]
  entries           Entry[]
  monthlyIncomes    MonthlyIncome[]

  @@map("users")
}

model FinancialProfile {
  id            String   @id @default(uuid())
  userId        String
  income        Float
  expenses      Float
  debts         Json
  createdAt     DateTime @default(now())
  
  user          User     @relation(fields: [userId], references: [id])

  @@map("financial_profiles")
}

model ActionPlan {
  id                      String   @id @default(uuid())
  userId                  String
  priorityList            Json     // Lista de dívidas organizadas por prioridade.
  monthlyPaymentSuggestions Json   // Sugestões de valores mensais a pagar.
  estimatedPayoffTime     String   // Tempo estimado para quitação.
  negotiationTips         Json     // Recomendações de negociação de dívidas.
  monthlyBudget           Json     // Orçamento para despesas essenciais e variáveis.
  alerts                  Json     // Alertas de dívidas e outras notificações.
  additionalTips          Json     // Recomendações de ajustes e dicas de renda.
  createdAt               DateTime? @default(now())
  
  user                    User     @relation(fields: [userId], references: [id])

  @@map("action_plans")
}

enum EntryCategory {
  ALIMENTACAO
  TRANSPORTE
  LAZER
  SAUDE
  EDUCACAO
  INVESTIMENTO
  OUTROS
}

model Entry {
  id          String       @id @default(uuid())
  userId      String
  type        EntryType
  title       String
  amount      Float
  category    EntryCategory
  createdAt   DateTime     @default(now())

  user        User         @relation(fields: [userId], references: [id])

  @@map("entries")
}


model MonthlyIncome {
  id          String    @id @default(uuid())
  userId      String
  month       DateTime
  totalIncome Float
  createdAt   DateTime @default(now())

  user        User      @relation(fields: [userId], references: [id])

  @@map("monthly_incomes")
}

enum EntryType {
  GANHO
  DESPESA
}
